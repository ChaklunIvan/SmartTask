// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartTask.DataBase;

#nullable disable

namespace SmartTask.DataBase.Migrations
{
    [DbContext(typeof(SmartTaskDbContext))]
    [Migration("20230217133816_init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartTask.Models.Entities.EquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("equipmentType", (string)null);
                });

            modelBuilder.Entity("SmartTask.Models.Entities.PlacementContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PremisesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("PremisesId");

                    b.ToTable("placementContract", (string)null);
                });

            modelBuilder.Entity("SmartTask.Models.Entities.ProductionPremises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("StandartArea")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("productionPremises", (string)null);
                });

            modelBuilder.Entity("SmartTask.Models.Entities.PlacementContract", b =>
                {
                    b.HasOne("SmartTask.Models.Entities.EquipmentType", "EquipmentType")
                        .WithMany("Contracts")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartTask.Models.Entities.ProductionPremises", "Premises")
                        .WithMany("Contracts")
                        .HasForeignKey("PremisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentType");

                    b.Navigation("Premises");
                });

            modelBuilder.Entity("SmartTask.Models.Entities.EquipmentType", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("SmartTask.Models.Entities.ProductionPremises", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
